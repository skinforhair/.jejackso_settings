#!/bin/bash
###############################################################
### This section sets the DIR variable to the current path
### allowing the script to run from anywhere on the filesystem
### as long as the directory structure within this app stays
### intact.
###############################################################
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

#############################
### Libraries and Functions
#############################
source $DIR/lib/vars
source $DIR/lib/db_connection
for f in $DIR/lib/functions/*; do source $f; done
source /root/.bin/lib/colors
PAGES="$DIR/pages/"
A="$DIR/tmp/Aired.txt"
U="$DIR/tmp/Upcom.txt"
N="$DIR/tmp/Notfo.txt"


available="$DIR/tmp/avail.txt"
upcoming="$DIR/tmp/upcom.txt"

outfile="available_episodes.txt"
remotepath="/home/jar/Downloads/"
output="$DIR/$outfile"


function cleanTMP() {
if [ -f $A ]; then rm $A; fi
if [ -f $U ]; then rm $U; fi
if [ -f $N ]; then rm $N; fi
}
cleanTMP
touch $A
touch $U
touch $N

SA=$(echo "select id from $tvshows where active_download=1" |mysql $dbOptions)
SArr=($SA)

maxlen=35
i=0
c=1
while [ $i -lt ${#SArr[@]} ]; do
  showID="${SArr[i]}"
  i=$((i+1))
show="id=$showID"
SN=$(echo "select showname from $tvshows where $show"|mysql $dbOptions)


#display progress
curlen=${#SN}
#echo -en "Checking show "
 perc=$(echo "scale=2; $i*100/${#SArr[@]}" |bc)
 perc=${perc:0:2}
  if [ "${perc:1:1}" == "." ]; then
        perc=${perc:0:1}
  fi
  if [ $perc -lt 33 ]; then
        echo -en "${red}"
  elif [ $perc -lt 66 ]; then
        echo -en "${yellow}"
  else
        echo -en "${green}"
  fi
 if [ $i -lt 10 ]; then
        echo -en "[ "
 else
        echo -en "["
 fi
 echo -en "$i${NC}/${#SArr[@]}]"

 if false; then
  case "$c" in
        "1") echo -en "   | "\\r;c=2;;
        "2") echo -en "   / "\\r;c=3;;
        "3") echo -en "   - "\\r;c=4;;
        "4") echo -en "   \ "\\r;c=1;;
  esac
 fi

echo -en " ${blue}[ $SN"
 while [ $curlen -lt $maxlen ]; do
  echo -en " "
  curlen=$((curlen+1))
 done
echo -en "]${NC}\\r"




#  echo "q: select showname from $tvshows where $show"
  answer=$($DIR/individual_episode "$SN")
  case "$?" in
	0) echo -e "$SN" >> $N;;
	1) echo -e "$answer" >> $A;;
	2) echo -e "$answer" >> $U;;
  esac

done

echo "Generated `date`" > $output
                echo -e "\n---- Available ----\n" >> $output
                cat "$A" >> $output
                echo -e "\n---- Upcoming ----\n" >> $output
                cat "$U" >> $output
                echo -e "\n---- No Future Episodes listed ----\n" >> $output
                cat "$N" >> $output
cleanTMP

   ssh jar@wheatley "if [ -a $remotepath$outfile ]; then rm $remotepath$outfile; fi"
    scp $output jar@wheatley:$remotepath
                if [ $? == 0 ]; then
                        #rm $output
                        stamp=$(date +%m%d%Y)
                        mv $output $DIR/archive/$outfile.$stamp
                fi

